if(NOT STM32_CHIP_TYPE)
    STM32_GET_CHIP_TYPE(${TARGET_CHIP} STM32_CHIP_TYPE)
    if(NOT STM32_CHIP_TYPE)
        message(FATAL_ERROR "Unknown chip: ${TARGET_CHIP}.")
    endif()
    message(STATUS "${TARGET_CHIP} is ${STM32_CHIP_TYPE} device")
endif()
string(TOLOWER ${STM32_CHIP_TYPE} STM32_CHIP_TYPE_LOWER)


# build path hints according to device series
if(STM32_SERIES STREQUAL "F0")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_M0/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM0.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M0)
elseif(STM32_SERIES STREQUAL "F1")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_M0/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM0.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M0)
elseif(STM32_SERIES STREQUAL "F2")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_M0/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM0.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M0)
elseif(STM32_SERIES STREQUAL "F3")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_M3/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM3.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M3)
elseif(STM32_SERIES STREQUAL "F4")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_RTOS_M4_M7/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM4.S)    
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M4)
elseif(STM32_SERIES STREQUAL "F7")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_RTOS_M4_M7/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM4.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M7)    
elseif(STM32_SERIES STREQUAL "L0")
    set(MBEDRTOS_TOOLCHAIN_PATH TARGET_M0/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM0.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M0)    
elseif(STM32_SERIES STREQUAL "L1")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_M0/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM0.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M0)
elseif(STM32_SERIES STREQUAL "L4")
    set(MBEDRTOS_PATH_SUFFIXES TARGET_RTOS_M4_M7/TOOLCHAIN_GCC)
    set(MBEDRTOS_HAL_NAME HAL_CM4.S)
    set(MBEDRTOS_COMPILE_OPTIONS -D__CORTEX_M4)
endif()

# set include directories for mBed RTOS
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos/rtx/TARGET_CORTEX_M)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/targets/TARGET_STM)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/targets/TARGET_STM/TARGET_STM32${STM32_SERIES})
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/targets/TARGET_STM/TARGET_STM32${STM32_SERIES}/TARGET_NUCLEO_F091RC)
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/targets/TARGET_STM/TARGET_STM32${STM32_SERIES}/TARGET_NUCLEO_F091RC/device)

# need to include this for mBed error includes
list(APPEND MBEDRTOS_INCLUDE_DIR ${PROJECT_BINARY_DIR}/mBedRTOS_Source/platform)

set(MBEDRTOS_SRCS
    Mutex.cpp
    rtos_idle.c
    RtosTimer.cpp
    Semaphore.cpp
    Thread.cpp

    HAL_CM.c
    rt_CMSIS.c
    rt_Event.c
    rt_List.c
    rt_Mailbox.c
    rt_MemBox.c
    rt_Memory.c
    rt_Mutex.c
    rt_OsEventObserver.c
    rt_Robin.c
    rt_Semaphore.c
    rt_System.c
    rt_Task.c
    rt_Time.c
    rt_Timer.c
)

foreach(SRC_FILE ${MBEDRTOS_SRCS})
    set(MBEDRTOS_SRC_FILE SRC_FILE-NOTFOUND)
    find_file(MBEDRTOS_SRC_FILE ${SRC_FILE}
        PATHS ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos/rtx ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos/rtx/TARGET_CORTEX_M
        CMAKE_FIND_ROOT_PATH_BOTH
    )
    list(APPEND MBEDRTOS_SOURCES ${MBEDRTOS_SRC_FILE})
endforeach()

# find path for HAL_CMx file
set(MBEDRTOS_SRC_FILE SRC_FILE-NOTFOUND)
find_file(MBEDRTOS_SRC_FILE ${MBEDRTOS_HAL_NAME}
    PATHS ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos/rtx/TARGET_CORTEX_M/${MBEDRTOS_PATH_SUFFIXES}
    CMAKE_FIND_ROOT_PATH_BOTH
)
list(APPEND MBEDRTOS_SOURCES ${MBEDRTOS_SRC_FILE})

# find path for SVC_Table file
set(MBEDRTOS_SRC_FILE SRC_FILE-NOTFOUND)
find_file(MBEDRTOS_SRC_FILE SVC_Table.S
    PATHS ${PROJECT_BINARY_DIR}/mBedRTOS_Source/rtos/rtx/TARGET_CORTEX_M/${MBEDRTOS_PATH_SUFFIXES}
    CMAKE_FIND_ROOT_PATH_BOTH
)
list(APPEND MBEDRTOS_SOURCES ${MBEDRTOS_SRC_FILE})

include(FindPackageHandleStandardArgs)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(MBEDRTOS DEFAULT_MSG MBEDRTOS_INCLUDE_DIR MBEDRTOS_SOURCES)
